C
C File:   vfield.f
C Author: bozhin
C
C Created on November 26, 2012, 1:58 PM
C

      SUBROUTINE FIELD(NQDIM, NX, NXH, HX, NY, NYH, HY, NZ, NZH, HZ,
     *  ALPHA, OMEGAC, DNUK, DNUM, V0, B0, V1, B1,
     *  VDATA, BDATA, VVBB, BVVB, VECNV, VECNB)
C
C THIS SUBROUTINE CALCULATES THE RHS OF EQUATIONS (3.56-3.60)
C
C DUMMY PARAMETERS:
C
C NQDIM -- DIMENSION OF Q-SPACE; NQDIM = 3
C NX, NY, NZ    -- NUMBERS OF DISCRETIZATION POINTS OF Q-AXES
C NXH, NYH, NZH -- HALF OF NX, NY, NZ; NX=2*NXH+1, NY=2*NYH+1, NZ=2*NZH+1
C HX, HY, HZ    -- STRIDE LENGTHS OF Q-AXES
C ALPHA         -- VECTOR OF SIZE NQDIM; EQUATION PARAMETER
C OMEGAC        -- SCALAR; ANGULAR MOMENT; EQUATION PARAMETER
C DNUK, DNUM    -- KINETIC AND MAGNETIC VISCOSITIES; EQUATION PARAMETERS
C V0, B0        -- 4D ARRAYS OF SIZE (NQDIM, NX, NY, NZ). INITIAL VALUES
C                  OF V AND B VECTORS OVER THE USED Q-GRID
C V1, B1        -- 4D ARRAYS OF SIZR (NQDIM, NX, NY, NZ). RETURNED VALUES
C                  VALUES OF THE RHS OD EQUATIONS
C VDATA, BDATA  -- AUXILIAR 4D ARRAYS OF SIZE (NQDIM, NX, NY, NZ).
C                  NEEDED BY THE INTEGRATE SUBROUTINE
C VVBB, BVVB    -- AUXILIAR 2D ARRAY OF SIZE (NQDIM, NQDIM).
C                  NEEDED BY THE INTEGRATE SUBROUTINE
C VECNV, VECNB  -- AUXILIAR VECTORS OF SIZE NQDIM.
C                  NEEDED BY THE INTEGRATE SUBROUTINE
C
      IMPLICIT NONE
      INTEGER NQDIM, NX, NXH, NY, NYH, NZ, NZH
      DOUBLE PRECISION HX, HY, HZ
      DOUBLE PRECISION ALPHA (NQDIM), OMEGAC, DNUK, DNUM
      DOUBLE PRECISION V0 (NQDIM, -NXH:NXH, -NYH:NYH, -NZH:NZH)
      DOUBLE PRECISION B0 (NQDIM, -NXH:NXH, -NYH:NYH, -NZH:NZH)
      DOUBLE PRECISION V1 (NQDIM, -NXH:NXH, -NYH:NYH, -NZH:NZH)
      DOUBLE PRECISION B1 (NQDIM, -NXH:NXH, -NYH:NYH, -NZH:NZH)
      DOUBLE PRECISION VDATA (NQDIM, -NXH:NXH, -NYH:NYH, -NZH:NZH)
      DOUBLE PRECISION BDATA (NQDIM, -NXH:NXH, -NYH:NYH, -NZH:NZH)
      DOUBLE PRECISION VVBB (NQDIM, NQDIM), VECNV (NQDIM)
      DOUBLE PRECISION BVVB (NQDIM, NQDIM), VECNB (NQDIM)
C
C LOCAL ARGUMENTS
C
      DOUBLE PRECISION Q(3), QQ, DIQQ, QXZ, QYZ
      DOUBLE PRECISION ALPHAQ
      DOUBLE PRECISION TOMEGAC, TOMEGAC1
      DOUBLE PRECISION DNXX1, DNYY1, DNXY
      INTEGER JQ(3)
      INTEGER IX, IY, IZ

      TOMEGAC  = 2.D0 * OMEGAC
      TOMEGAC1 = 2.D0 * (1.D0 + OMEGAC)

      DO IX = -NXH, NXH
          JQ(1) = IX
          Q(1)  = DFLOAT(IX) * HX
      DO IY = -NYH, NYH
          JQ(2) = IY
          Q(2)  = DFLOAT(IY) * HY
      DO IZ = -NZH, NZH
          JQ(3) = IZ
          Q(3)  = DFLOAT(IZ) * HZ
          QQ    = Q(1)*Q(1)+Q(2)*Q(2)+Q(3)*Q(3)           ! SQUARE OF VECTOR Q
          IF (IX.EQ.0 .AND. IY.EQ.0 .AND. IZ.EQ.0) THEN
              DIQQ = 0.D0                                 ! QQ = 0 -> 1/QQ := 0
          ELSE
              DIQQ = 1.D0 / QQ                            ! INVERSE OF QQ
          ENDIF
          ALPHAQ = ALPHA(1)*Q(1)+ALPHA(2)*Q(2)+ALPHA(3)*Q(3)
          DNXX1 = DIQQ*Q(1)*Q(1) - 1.D0
          DNYY1 = DIQQ*Q(2)*Q(2) - 1.D0
          DNXY  = DIQQ*Q(1)*Q(2)
      CALL INTEGRATE(NQDIM, NX, NY, NZ, NXH, NYH, NZH, HX, HY, HZ,
     *  JQ, V0, B0, VDATA, BDATA, VVBB, BVVB, VECNV, VECNB)

      V1(1,IX,IY,IZ) = (TOMEGAC1*DNXY-DNUK*QQ) * V0(1,IX,IY,IZ)
     *               - TOMEGAC*DNXX1 * V0(2,IX,IY,IZ)
     *               + ALPHAQ * B0(1,IX,IY,IZ) + VECNV(1)
      V1(2,IX,IY,IZ) = (TOMEGAC1*DNYY1 + 1.D0) * V0(1,IX,IY,IZ)
     *               - (TOMEGAC*DNXY + DNUK*QQ)* V0(2,IX,IY,IZ)
     *               + ALPHAQ * B0(2,IX,IY,IZ) + VECNV(2)
      B1(1,IX,IY,IZ) = -ALPHAQ * V0(1,IX,IY,IZ)
     *               - DNUM*QQ * B0(1,IX,IY,IZ) + VECNB(1)
      B1(2,IX,IY,IZ) = B0(1,IX,IY,IZ) - DNUM*QQ * B0(2,IX,IY,IZ)
     *               - ALPHAQ * V0(2,IX,IY,IZ)  + VECNB(2)
      IF (IZ.EQ.0) THEN
          V1(3,IX,IY,IZ) = 0.D0
          B1(3,IX,IY,IZ) = 0.D0
      ELSE
          QXZ = - Q(1) / Q(3)
          QYZ = - Q(2) / Q(3)
          V1(3,IX,IY,IZ) = QXZ*V1(1,IX,IY,IZ) + QYZ*V1(2,IX,IY,IZ)
          B1(3,IX,IY,IZ) = QXZ*B1(1,IX,IY,IZ) + QYZ*B1(2,IX,IY,IZ)
      ENDIF

      ENDDO
      ENDDO
      ENDDO
      RETURN
      END

