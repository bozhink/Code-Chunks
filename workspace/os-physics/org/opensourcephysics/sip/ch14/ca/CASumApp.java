/* One Dimensional Cellular Automata  */package org.opensourcephysics.sip.ch14.ca;import org.opensourcephysics.controls.*;import org.opensourcephysics.display.*;import org.opensourcephysics.display2d.*;import javax.swing.*;import java.awt.geom.*;import java.awt.*;import java.util.*;public class CASumApp extends AbstractCalculation { DrawingPanel      plottingPanel = new PlottingPanel("x","t","  "); DrawingFrame      frame = new DrawingFrame(plottingPanel); BinaryLattice     ca;  // cellular automata lattice int[] sums; int[] row;public CASumApp() {  frame.show();}public void calculate() {  int L = control.getInt("Lattice size");  int tMax = control.getInt("Maximum time");  ca = new BinaryLattice(L,tMax);  ca.setBlock(0,0,new int[L][tMax]);  plottingPanel.addDrawable(ca);  plottingPanel.setPreferredMinMaxX(0,L);  plottingPanel.setPreferredMinMaxY(0,tMax);  row  = new int[L];  int z = control.getInt("Neigborhood size parameter z");  sums = new int[2*z+2];  int b = control.getInt("Rule Sequence, e.g. 1011 means sum of 0,1 or 3 leads to 1");  setRule(z,b);  for(int i = 0; i < L; i++) {    if(Math.random() > 0.5)       row[i] = 1;  // random initial lattice  }  ca.setRow(0,0,row);  for(int t = 1; t < tMax; t++) {   iterate(t-1,L,z);   ca.setRow(t,0,row);  }   plottingPanel.repaint(); }public void iterate(int t1, int L, int z) {  for(int i = 0; i < L; i++) {    int sum = 0;    for(int neighbor = i-z; neighbor <= i+z; neighbor++)       sum += ca.getValue((neighbor+L)%L,t1);    if(sums[sum] == 1)      row[i] = 1;    else       row[i] = 0;  } }public void setRule(int z, int b) {  sums = new int[2*z+2];  for(int i = 0; i < 2*z+2; i++){     if(b % 2 ==1) sums[i] = 1;     b = b/10;  } }public void resetCalculation(){  super.resetCalculation();  control.setValue("Neigborhood size parameter z", 2);  control.setValue("Rule Sequence, e.g. 1011 means sum of 0,1 or 3 leads to 1", 10100);  control.setValue("Maximum time", 100);  control.setValue("Lattice size", 500); }public static void main(String args[]) {  Calculation app = new CASumApp();  Control control = new CalculationControl(app);  app.setControl(control);}}