/** *@author     Jan Tobochnik *@created    Dec 24, 2002 */package org.opensourcephysics.sip.ch14.minoritygame;import org.opensourcephysics.controls.*;import org.opensourcephysics.display.*;public class MGApp implements Calculation{private Control myControl;private MG f;private PlottingPanel drawingPanel = new PlottingPanel("m", "sigma", "Minority Game");private DrawingFrame drawingFrame=new DrawingFrame(drawingPanel);private DatasetManager datasetManager = new DatasetManager();private PlottingPanel drawingPanel2 = new PlottingPanel("m", "A", "Mean Agent Score");private DrawingFrame drawingFrame2=new DrawingFrame(drawingPanel2);private DatasetManager datasetManager2 = new DatasetManager();public MGApp() {   f = new MG();   drawingPanel.addDrawable(datasetManager);   drawingPanel2.addDrawable(datasetManager2);}public void setControl (Control control) {    myControl = control;    resetCalculation();}public void calculate() {    datasetManager.clear();    datasetManager2.clear();    f.N = myControl.getInt("Number of agents");    int mMax = myControl.getInt("Maximum number of memories");    f.s = myControl.getInt("number of strategies per agent");    f.nRun = myControl.getInt("number of independent runs");    f.nStep = myControl.getInt("number of steps per run");    for(int m = 2; m <= mMax; m++) {       f.m = m;       f.play();       datasetManager.append(0, m,f.sigma,0,f.spread);       datasetManager2.append(0, m,f.agentScore);       drawingPanel.render();       drawingPanel2.render();    }}public void resetCalculation() {     myControl.setValue("Number of agents",f.N);     myControl.setValue("Maximum number of memories", 15);     myControl.setValue("number of strategies per agent",f.s);     myControl.setValue("number of independent runs",f.nRun);     myControl.setValue("number of steps per run",f.nStep);     myControl.clearMessages();}    	public static void main(String args[]) {		MGApp model = new MGApp();		Control control = new CalculationControl(model);		model.setControl(control);	}}