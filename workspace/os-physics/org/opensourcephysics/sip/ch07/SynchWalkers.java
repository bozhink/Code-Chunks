/* * The org.opensourcephysics.sip.ch11 package contains classes for chapter 11, * Random Processes, of the book Simulations in Physics. * Copyright (c) 2002  H. Gould, J. Tobochnik, and W. Christian. */package  org.opensourcephysics.sip.ch07;import  org.opensourcephysics.display.*;import  java.awt.*;/** * Synchronized Random Walk simulation in 1-D * * @author Jan Tobochnik */public class SynchWalkers {	double TAccum,TSquaredAcum;   // accumulated data on time when two walkers synchronize	int L;                     // lattice size  /**   * Initializes walker array   */  /**   *  Random walk for two walkers until they are on same site   */public void walk() {   int x1 = (int)(Math.random()*L);   int x2 = (int)(Math.random()*L);   int t = 0;   while(x1 != x2) {       if(Math.random() < 0.5) {  // move left          if(x1 != 0) x1--;          if(x2 != 0) x2--;       }       else {  // move right          if(x1 != L-1) x1++;          if(x2 != L-1) x2++;       }       t++;  }       TAccum += t;       TSquaredAcum += t*t;       }public void reset() {       TAccum = 0;       TSquaredAcum = 0;}}