/* * The org.opensourcephysics.sip.ch11 package contains classes for chapter 11, * Random Processes, of the book Simulations in Physics. * Copyright (c) 2002  H. Gould, J. Tobochnik, and W. Christian. */package  org.opensourcephysics.sip.ch07;import org.opensourcephysics.controls.*;import org.opensourcephysics.frames.*;import java.io.*;/** * Simulates Synchronized random walkers in one dimension * @author Jan Tobochnik, revised 12/10/04 */public class SynchWalkersApp extends AbstractSimulation {  SynchWalkers      walkers = new SynchWalkers();  PlotFrame      	plotFrame = new PlotFrame("L","T","Synchronized Walkers");  int L; // lattice size  int trials;/**   * Get's parameters   */  public void initialize() {     trials =  control.getInt("Number of trials per lattice size");     L = 1;     walkers.reset();     plotFrame.clearData();  }/**   * Does one lattice size at a time   */  public void doStep() {      walkers.L = L;      for(int i = 0; i < trials; i++) {        walkers.walk();      }      double T = walkers.TAccum/trials;      double sig = Math.sqrt((walkers.TSquaredAcum)/trials - T*T);      plotFrame.append(0,L*1.0,T,0,sig);      plotFrame.render();      walkers.reset();      L++;  } /**   * Resets to default values   */ public void reset() {    control.setValue("Number of trials per lattice size", 10);    plotFrame.clearData(); }   /**   * Starts the Java application.   * @param args  command line parameters   */  public static void main (String[] args) {     SimulationControl.createApp(new SynchWalkersApp());  }}