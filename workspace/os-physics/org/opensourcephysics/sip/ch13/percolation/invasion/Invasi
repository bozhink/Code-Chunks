package org.opensourcephysics.sip.ch13.percolation.invasion;import org.opensourcephysics.controls.*;import org.opensourcephysics.display.*;import org.opensourcephysics.display2d.*;import javax.swing.*;import java.awt.geom.*;import java.awt.*;import java.util.*;import java.text.DecimalFormat;public class InvasionApp extends AbstractAnimation {    Invasion model;    DrawingPanel     latticePanel;    DrawingFrame 	  latticeFrame;    PlottingPanel     plottingPanel;    DrawingFrame      plottingFrame;    DatasetManager    datasetManager  = new DatasetManager();    DataTable dataTable = new DataTable();    DataTableFrame tableFrame = new DataTableFrame("Distribution", dataTable);    int plotSteps;   public InvasionApp() {      model = new Invasion();      latticePanel = new DrawingPanel();      latticeFrame = new DrawingFrame(latticePanel);      latticePanel.addDrawable(model);      plottingPanel = new PlottingPanel("r", "P(r)", "Site Distribution");      plottingPanel.addDrawable(datasetManager);      dataTable.add(datasetManager);      plottingFrame = new DrawingFrame(plottingPanel);  }   public void initializeAnimation() {     model.Ly = control.getInt("Ly");     plotSteps = control.getInt("Steps between plotting");     model.createNewLattice();     latticePanel.setPreferredMinMax(-0.2*model.Lx, 1.2*model.Lx,-0.2*model.Ly, 1.2*model.Ly);     latticePanel.render();   }   public void doStep() {      for(int i = 0; i < plotSteps;i++) model.step();      latticePanel.render();   }   public void resetAnimation() {      control.setValue("Ly", 20);      control.setValue("Steps between plotting", 10);   }   public void distribution() {     datasetManager.clear();     model.computeDistribution(datasetManager);     plottingPanel.render();     dataTable.refreshTable();     tableFrame.show();   }   public static void main (String[] args) {      InvasionApp app = new InvasionApp();      AnimationControl control = new AnimationControl(app);      control.addButton("distribution","distribution");      app.setControl(control);   }}