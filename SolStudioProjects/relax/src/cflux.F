      SUBROUTINE CFLUX(P,F,ID,JD,IDEBUG)
C
C   This routine is currently experimental !!!!
C   USE AT YOUR OWN RISK.
C   Extremely good convergence is required to work ,since
C   if not they will not be orthogonal.
C
C   Calculate flux values F from potential values P
C   Normalized between 0 and 1
C
      REAL P(ID,JD),F(ID,JD)
      DIMENSION INC(6),JNC(6),KNC(7)
      CALL TRANSPARENT_MODE(0)
10    DO 20 I=1,ID
      DO 20 J=1,JD
      F(I,J)=1.E30
20    CONTINUE
C     IDIR=1,2,3,4,5,6 MEANS RIGHT,UP,LEFT,DOWN,RIGHT,UP RESPECTIVELY
C     FILL INCREMENTS FOR CORRESPONDING IDIR
      NDIR=1
      IDIR=1
      INC(1)=1
      INC(2)=0
      INC(3)=-1
      INC(4)=0
      INC(5)=1
      INC(6)=0
      JNC(1)=0
      JNC(2)=1
      JNC(3)=0
      JNC(4)=-1
      JNC(5)=0
      JNC(6)=1
C     KNC ARRAY USED TO INCREMENT 'LEFT' FLUXES
      KNC(1)=1
      KNC(2)=1
      KNC(3)=-1
      KNC(4)=-1
      KNC(5)=1
      KNC(6)=1
      KNC(7)=-1
      JD1=JD-1
      ID1=ID-1
C     DETERMINE ORIGIN POINT FOR FLUX
      DO 40 I=2,ID1
      DO 40 J=2,JD1
C      J=JD1-JJ+2
      IORG=I
      JORG=J
      IF(P(I,J) .GE. 0.) GO TO 50
      IF(IDEBUG.NE.0) WRITE(6,30)I,J,P(I,J)
30    FORMAT(' REJECT',2I5,E10.2)
40    CONTINUE
50    IP=IORG
      JP=JORG
      IXS=0
      F(IP,JP)=0.
      IF(IDEBUG.NE.0) WRITE(6,220) IP,JP,NDIR,F(IP,JP)
60    IFILL=IP
70    JFILL=JP
C     FILL ALL POINTS TO LEFT OF PRIME POINT UP TO BOUNDARY OR 2ND METAL
80    IFILL=IFILL+INC(IDIR+1)
      JFILL=JFILL+JNC(IDIR+1)
      IF(P(IFILL,JFILL) .LT. 0.)IXS=1
      IF(P(IFILL,JFILL) .GE. 0. .AND. IXS .GT. 0) GO TO 140
C     GENERAL EQN. TO LEFT FILL IS NEXT
      IF(F(IFILL,JFILL) .LT. 1.E29) GO TO 90
      RFAC=1.
      F(IFILL,JFILL)=F(IFILL-INC(IDIR+1),JFILL-JNC(IDIR+1))+
     C  .25*RFAC*(  ABS(P(IFILL+KNC(IDIR),JFILL+KNC(IDIR+3) ) ) -
     C   ABS( P(IFILL+KNC(IDIR+3),JFILL+KNC(IDIR+2) ) ) +
     C  ABS( P(IFILL+INC(IDIR),JFILL+JNC(IDIR) ) )
     C  -ABS(P(IFILL+INC(IDIR+2),JFILL+JNC(IDIR+2) ) )        )
      IF(IDEBUG.EQ.2) WRITE(6,220) IFILL,JFILL,IDIR,F(IFILL,JFILL)
90    GO TO (100,110,120,130),IDIR
C     STOP AT BOUNDARY OF FULL GRID FOR LEFT FILLS
100   IF(JFILL .GE. JD) GO TO 140
      GO TO 80
110   IF(IFILL .LE. 1) GO TO 140
      GO TO 80
120   IF(JFILL .LE. 1) GO TO 140
      GO TO 80
130   IF(IFILL .GE. ID) GO TO 140
      GO TO 80
C     INCR. PRIME POINT,ADD FLUX,DEFINE IP,JP, RESET IXS AND GIVE DIRECT
140   NDIR=4
      IF(IDIR .NE. 1) NDIR=IDIR-1
C      ALWAYS TRY TO MOVE PRIME POINT RIGHT
150   ITRY=IP+INC(NDIR)
      JTRY=JP+JNC(NDIR)
      GO TO (160,170,180,190),NDIR
160   IF(P(ITRY,JTRY) .GE. 0. .AND. ITRY .LT. ID) GO TO 200
      NDIR=2
      GO TO 150
170   IF(P(ITRY,JTRY) .GE. 0. .AND. JTRY .LT. JD) GO TO 200
      NDIR=3
      GO TO 150
180   IF(P(ITRY,JTRY) .GE. 0. .AND. ITRY .GT.  1) GO TO 200
      NDIR=4
      GO TO 150
190   IF(P(ITRY,JTRY) .GE. 0. .AND. JTRY .GT. 1) GO TO 200
      NDIR=1
      GO TO 150
C     TEST IF IP,JP ARE IORG,JORG---IF TRUE WE ARE FINISHED WITH FLUX
200   IF(ITRY .EQ. IORG .AND. JTRY .EQ. JORG) GO TO 230
C     ADD FLUX TO PRIME POINT
      IDIR=NDIR-1
      IF(NDIR .EQ. 1) IDIR=4
      IFILL=ITRY
      JFILL=JTRY
      IF(F(ITRY,JTRY) .LT. 1.E29) GO TO 210
      RFAC=1.
      F(ITRY,JTRY)=F(IP,JP)+
     C  .25*RFAC*(  ABS(P(IFILL+KNC(IDIR),JFILL+KNC(IDIR+3) ) ) -
     C   ABS( P(IFILL+KNC(IDIR+3),JFILL+KNC(IDIR+2) ) ) +
     C  ABS( P(IFILL+INC(IDIR),JFILL+JNC(IDIR) ) )
     C  -ABS(P(IFILL+INC(IDIR+2),JFILL+JNC(IDIR+2) ) )        )
210   IXS=0
      IDIR=NDIR
      IP=ITRY
      JP=JTRY
      IF(IDEBUG.NE.0) WRITE(6,220) IP,JP,NDIR,F(ITRY,JTRY)
220   FORMAT(' PRIME POINT VALUES=',3I5,E20.10)
      GO TO 60
230   IF(I1 .LE. 0)I1=1
      IF(I2 .LE. 0)I2=ID
      IF(J1 .LE. 0) J1=1
      IF(J2 .LE. 0)J2=JD
      FMAX=-1.E20
      FMIN=1.E20
      DO 240 I=I1,I2
      DO 240 J=J1,J2
      IF(F(I,J) .GT. 1.E29) GO TO 240
      IF(F(I,J) .GT. FMAX) FMAX=F(I,J)
      IF(F(I,J) .LT. FMIN)FMIN=F(I,J)
240   CONTINUE
      DO 250 I=I1,I2
      DO 250 J=J1,J2
      F(I,J)=(F(I,J)-FMIN)/(FMAX-FMIN)
250   CONTINUE
      IF(IDEBUG.NE.0) WRITE(6,280)
      J1=1
      J2=JD
      I1=1
      I2=ID
      DO 260 J=J1,J2
C     WRITE(6,101)J,(F(I,J),I=I1,I2)
260   CONTINUE
270   FORMAT(' Y ROW NUMBER=',I5,/,(1X,F10.7,11F11.7))
280   FORMAT(1H1,'  FLUX GRID VALUES')
      RETURN
      END !CFLUX

